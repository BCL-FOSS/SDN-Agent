services:
  socket_app:
    restart: always
    build:
      context: .
      dockerfile: socketapp/Dockerfile
    container_name: socketapp
    environment:
      - REDIS_CLIENT_AUTH_DB=${REDIS_CLIENT_AUTH_DB}
      - REDIS_CLIENT_AUTH_PORT=${REDIS_CLIENT_AUTH_DB_PORT}
      - REDIS_ADMIN_DB=${REDIS_ADMIN_DB}
      - REDIS_ADMIN_PORT=${REDIS_ADMIN_DB_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_NAME=${API_NAME}
      - API_PORT=${API_PORT}
    volumes:
      - app_agentik_data:/usr/src/app

  socket_app_api:
    restart: always
    build:
      context: .
      dockerfile: socketappapi/Dockerfile
    container_name: socketappapi
    environment:
      - REDIS_CLIENT_AUTH_DB=${REDIS_CLIENT_AUTH_DB}
      - REDIS_CLIENT_AUTH_PORT=${REDIS_CLIENT_AUTH_DB_PORT}
      - REDIS_ADMIN_DB=${REDIS_ADMIN_DB}
      - REDIS_ADMIN_PORT=${REDIS_ADMIN_DB_PORT}

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - socketapp
      - socketappapi

volumes:
  app_agentik_data:
    external: true
  caddy_data:
    external: true
  caddy_config:
    external: true