services:
  socket_app:
    restart: always
    build:
      context: .
      dockerfile: socketapp/Dockerfile
    container_name: socketapp
    environment:
      - AGENT_MSGS_DB=${AGENT_MSGS_DB}
      - AGENT_MSGS_DB_PORT=${AGENT_MSGS_DB_PORT}
      - CLIENT_AUTH_DB=${CLIENT_AUTH_DB}
      - CLIENT_AUTH_DB_PORT=${CLIENT_AUTH_DB_PORT}
      - CLIENT_SESS_DB=${CLIENT_SESS_DB}
      - CLIENT_SESS_DB_PORT=${CLIENT_SESS_DB_PORT}
      - RATE_LIMIT_DB=${RATE_LIMIT_DB}
      - RATE_LIMIT_DB_PORT=${RATE_LIMIT_DB_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - socket_data:/home/quart/instance/apps
    
  agent_app:
    restart: always
    build:
      context: .
      dockerfile: agentapp/Dockerfile
    container_name: agentapp
    environment:
      - CLIENT_AUTH_DB=${CLIENT_AUTH_DB}
      - CLIENT_AUTH_DB_PORT=${CLIENT_AUTH_DB_PORT}
      - CLIENT_SESS_DB=${CLIENT_SESS_DB}
      - CLIENT_SESS_DB_PORT=${CLIENT_SESS_DB_PORT}
    volumes:
      - agent_data:/home/quart/instance/apps

  omadamcp:
    restart: always
    build:
      context: .
      dockerfile: omadamcp/Dockerfile
    container_name: omadamcp
    volumes:
      - omada_mcp_data:/home/quart/instance/apps

  ubntmcp:
    restart: always
    build:
      context: .
      dockerfile: ubntmcp/Dockerfile
    container_name: ubntmcp
    volumes:
      - ubnt_mcp_data:/home/quart/instance/apps
    
  rate_limit_redis:
    image: redis:latest
    container_name: ${RATE_LIMIT_DB}
    command: ["redis-server", "--port", "9379", "--appendonly", "yes"]
    volumes:
      - rate_limit_data:/data 

  client_auth_redis:
    image: redis:latest
    container_name: ${CLIENT_AUTH_DB}
    command: ["redis-server", "--port", "7369", "--appendonly", "yes"]
    volumes:
      - client_auth_data:/data 

  client_sess_redis:
    image: redis:latest
    container_name: ${CLIENT_SESS_DB}
    command: ["redis-server", "--port", "8369", "--appendonly", "yes"]
    volumes:
      - client_sess_data:/data

  agent_msgs_redis:
    image: redis:latest
    container_name: ${AGENT_MSGS_DB}
    command: ["redis-server", "--port", "6369", "--appendonly", "yes"]
    volumes:
      - agent_msg_data:/data

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - agent_app

volumes:
  socket_data:
    external: true
  agent_data:
    external: true
  ubnt_mcp_data:
    external: true
  omada_mcp_data:
    external: true
  agent_msg_data:
    external: true
  client_sess_data:
    external: true
  client_auth_data:
    external: true
  rate_limit_data:
    external: true
  caddy_data:
    external: true
  caddy_config:
    external: true